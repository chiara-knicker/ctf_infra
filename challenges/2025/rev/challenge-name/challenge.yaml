apiVersion: apps/v1
kind: Deployment
metadata:
  name: challenge-name
  labels:
    category: rev # We assign labels to the deployment to link it to a service later, and to help manage deployments
    challenge: challenge-name
spec:
  replicas: 1  # Run a single instance of the challenge
  selector:
    matchLabels:
      category: rev
      challenge: challenge-name
  template:
    metadata:
      labels:
        category: rev
        challenge: challenge-name
    spec:
      containers:
        - name: challenge-name-container
          image: europe-west2-docker.pkg.dev/ucl-ctf-infra/ctf-docker-registry/challenge-name:latest  # Change this to your actual image name
          #resources: # Resource limits for the container. These are important, in case people manage to max out CPU/RAM on your challenge
          #  limits:
          #    cpu: 100m
          #    memory: 150Mi
          #  requests:
          #    cpu: 10m
          #    memory: 30Mi
          ports: # Port exposed by the container, you can add multiple
            - containerPort: 12345  # Match this to the port your challenge listens on
              name: port-12345
      imagePullSecrets: # if using authentication with json key
        - name: artifact-registry-secret
---
apiVersion: v1
kind: Service
metadata:
  name: challenge-name
  labels:
    category: rev
    challenge: challenge-name
spec:
  type: NodePort # LoadBalancer?
  selector:
    category: rev
    challenge: challenge-name
  ports:
    - port: 12345  # The port exposed by the container
      name: port-12345
      targetPort: 12345  # The port exposed by the container
      nodePort: 30001 # The port that is exposed on each Node on the cluster?